name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            rid: linux-x64
            optimization: Size
          - os: ubuntu-latest
            rid: linux-x64
            optimization: Speed
          - os: ubuntu-latest
            rid: linux-arm64
            optimization: Size
          - os: ubuntu-latest
            rid: linux-arm64
            optimization: Speed
          # Windows builds
          - os: windows-latest
            rid: win-x86
            optimization: Size
          - os: windows-latest
            rid: win-x86
            optimization: Speed
          - os: windows-latest
            rid: win-x64
            optimization: Size
          - os: windows-latest
            rid: win-x64
            optimization: Speed
          - os: windows-latest
            rid: win-arm64
            optimization: Size
          - os: windows-latest
            rid: win-arm64
            optimization: Speed

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: '10.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4.2.4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install cross-compilation tools (Linux ARM64)
        if: runner.os == 'Linux' && matrix.rid == 'linux-arm64'
        run: |
          set -eux
          sudo dpkg --add-architecture arm64

          sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
          sudo sed -i 's|^deb http|deb [arch=amd64] http|' /etc/apt/sources.list
          sudo sed -i 's|^deb https|deb [arch=amd64] https|' /etc/apt/sources.list

          sudo tee /etc/apt/sources.list.d/arm64.list >/dev/null <<'EOF'
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse
          EOF

          sudo apt-get update

          sudo apt-get install -y \
            clang lld llvm \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            binutils-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            zlib1g-dev:arm64
            
      - name: Publish
        run: dotnet publish src/RadioModBackend.NET.csproj --configuration Release --runtime ${{ matrix.rid }} --output publish/${{ matrix.rid }}-${{ matrix.optimization }} --verbosity minimal /p:OptimizationPreference=${{ matrix.optimization }} /p:SelfContained=true /p:DebugType=None

      - name: Archive artifacts (Linux)
        if: runner.os == 'Linux'
        run: |
          cd publish
          zip -r "../${{ matrix.rid }}-${{ matrix.optimization }}.zip" "${{ matrix.rid }}-${{ matrix.optimization }}"

      - name: Archive artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path "publish\\${{ matrix.rid }}-${{ matrix.optimization }}\\*" -DestinationPath "${{ matrix.rid }}-${{ matrix.optimization }}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ matrix.rid }}-${{ matrix.optimization }}
          path: ${{ matrix.rid }}-${{ matrix.optimization }}.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5.0.0
        with:
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v2.3.3
        with:
          files: '**/*.zip'
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
